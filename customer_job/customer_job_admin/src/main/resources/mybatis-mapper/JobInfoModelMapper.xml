<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="JobInfoMapper">
    
    <resultMap id="JobInfo" type="com.job.admin.job.model.JobInfoModel" >
        <result column="id" property="id" />
    
        <result column="job_group" property="jobGroup" />
        <result column="job_cron" property="jobCron" />
        <result column="job_desc" property="jobDesc" />
        
        <result column="add_time" property="createTime" />
        <result column="update_time" property="modifyTime" />
        
        <result column="author" property="author" />
        <result column="alarm_email" property="alarmEmail" />

        <result column="executor_route_strategy" property="executorRouteStrategy" />
        <result column="executor_handler" property="executorHandler" />
        <result column="executor_param" property="executorParam" />
        
        <result column="glue_type" property="glueType" />
        <result column="glue_source" property="glueSource" />
        <result column="glue_remark" property="glueRemark" />
        <result column="glue_updatetime" property="glueUpdateTime" />
        
        <result column="child_jobkey" property="childJobKey" />
        <result column="executor_block_strategy" property="executorBlockStrategy"/>
        <result column="executor_fail_strategy" property="executorFailStrategy"/>
        <result column="state" property="state"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.id,
        t.job_group,
        t.job_cron,
        t.job_desc,
        t.add_time,
        t.update_time,
        t.author,
        t.alarm_email,
        t.executor_route_strategy,
        t.executor_handler,
        t.executor_param,
        t.glue_type,
        t.glue_source,
        t.glue_remark,
        t.glue_updatetime,
        t.child_jobkey,
        t.executor_fail_strategy,
        t.executor_block_strategy,
        t.state
    </sql>
    
    <select id="pageList" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT <include refid="Base_Column_List" />
        FROM JOB_QRTZ_TRIGGER_INFO AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="null!=jobGroup and ''!=jobGroup ">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="null!=executorHandler and ''!=executorHandler">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
        </trim>
        ORDER BY id DESC
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM JOB_QRTZ_TRIGGER_INFO AS t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="null!=jobGroup and ''!=jobGroup ">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
        </trim>
    </select>
    
    <insert id="save" parameterType="com.job.admin.job.model.JobInfoModel" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO JOB_QRTZ_TRIGGER_INFO (
            job_group,
            job_cron,
            job_desc,
            add_time,
            update_time,
            author,
            alarm_email,
            executor_route_strategy,
            executor_handler,
            executor_param,
            glue_type,
            glue_source,
            glue_remark,
            glue_updatetime,
            child_jobkey,
            executor_block_strategy,
            executor_fail_strategy
        ) VALUES (
            #{jobGroup},
            #{jobCron}, 
            #{jobDesc},
            NOW(),
            NOW(),
            #{author},
            #{alarmEmail},
            #{executorRouteStrategy},
            #{executorHandler},
            #{executorParam},
            #{glueType},
            #{glueSource},
            #{glueRemark},
            NOW(),
            #{childJobKey},
            #{executorBlockStrategy},
            #{executorFailStrategy}
        );
        <!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
            /*SELECT @@IDENTITY AS id*/
        </selectKey>-->
    </insert>
    <update id="update" parameterType="com.job.admin.job.model.JobInfoModel" >
        UPDATE JOB_QRTZ_TRIGGER_INFO
        SET 
            version=version+1,
            job_cron = #{jobCron},
            job_desc = #{jobDesc},
            update_time = NOW(),
            author = #{author},
            alarm_email = #{alarmEmail},
            executor_route_strategy = #{executorRouteStrategy},
            executor_handler = #{executorHandler},
            executor_param = #{executorParam},
            executor_block_strategy = #{executorBlockStrategy},
            executor_fail_strategy = #{executorFailStrategy},
            glue_type = #{glueType},
            <if test="null!=glueSource and ''!=glueSource">
                 glue_source = #{glueSource},
            </if>
            glue_remark = #{glueRemark},
            glue_updatetime = now(),
            child_jobkey = #{childJobKey}
        WHERE id = #{id}
    </update>
    
    <delete id="deleteJob" parameterType="java.util.HashMap">
        DELETE
        FROM JOB_QRTZ_TRIGGER_INFO
        WHERE id = #{id}
    </delete>
    <update id="updateJobState" parameterType="com.job.admin.job.model.JobInfoModel" >
        update JOB_QRTZ_TRIGGER_INFO set version=version+1,state=#{state}
        where id=#{id}
    </update>
    
    <select id="queryJobById" parameterType="java.util.HashMap" resultMap="JobInfo">
        select * from JOB_QRTZ_TRIGGER_INFO where id=#{id}
    </select>
    
     <select id="jobDictionary" parameterType="java.util.HashMap" resultMap="JobInfo">
        SELECT id,job_desc
        FROM JOB_QRTZ_TRIGGER_INFO AS t
    </select>
</mapper>